package layers

import "testing"

func TestConvolution(t *testing.T) {
	var input = [][][]float32{
		{
			{0, 0, 0, 0, 0, 0, 0},
			{0, 1, 0, 0, 1, 0, 0},
			{0, 0, 1, 0, 2, 2, 0},
			{0, 1, 2, 2, 1, 0, 0},
			{0, 0, 0, 0, 1, 2, 0},
			{0, 0, 0, 0, 2, 0, 0},
			{0, 0, 0, 0, 0, 0, 0},
		},
		{
			{0, 0, 0, 0, 0, 0, 0},
			{0, 1, 2, 0, 2, 1, 0},
			{0, 0, 1, 1, 2, 2, 0},
			{0, 0, 2, 0, 1, 1, 0},
			{0, 2, 2, 2, 1, 2, 0},
			{0, 2, 0, 0, 1, 2, 0},
			{0, 0, 0, 0, 0, 0, 0},
		},
		{
			{0, 0, 0, 0, 0, 0, 0},
			{0, 2, 0, 0, 2, 1, 0},
			{0, 0, 1, 1, 0, 2, 0},
			{0, 0, 1, 2, 0, 0, 0},
			{0, 0, 1, 2, 1, 1, 0},
			{0, 1, 1, 0, 1, 1, 0},
			{0, 0, 0, 0, 0, 0, 0},
		},
	}

	var filters = [][][][]float32{
		{
			{
				{0, 1, 1},
				{1, -1, -1},
				{-1, 0, -1},
			},
			{
				{0, 1, 0},
				{-1, 0, -1},
				{-1, 1, -1},
			},
			{
				{1, 1, 0},
				{0, 1, -1},
				{1, 1, 0},
			},
		},
		{
			{
				{1, 1, 1},
				{-1, -1, 0},
				{0, 0, -1},
			},
			{
				{1, 0, 1},
				{1, 0, 1},
				{-1, 1, 0},
			},
			{
				{0, 0, 0},
				{1, 0, 0},
				{1, -1, 0},
			},
		},
	}

	var ans = [][][]float32{
		{
			{-3, -10, 0},
			{-5, 4, 8},
			{2, 2, 8},
		},
		{
			{0, 2, 1},
			{5, 4, 7},
			{2, 6, 4},
		},
	}

	conv := ConvolutionLayer{
		NInput:     3,
		NOutput:    2,
		KernelSize: 3,
		Stride:     2,
		Padding:    0,
		Weights:    filters,
	}

	output, err := conv.Forward(input)
	if err != nil {
		t.Fatal(err)
	}

	for i := range output {
		for j := range output[i] {
			for k := range output[i][j] {
				if output[i][j][k] != ans[i][j][k] {
					t.Log(output)
					t.Fatal("not same")
				}
			}
		}
	}

}
